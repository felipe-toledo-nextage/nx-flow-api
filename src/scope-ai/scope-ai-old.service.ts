import { Injectable } from '@nestjs/common';
import { OpenAI } from 'openai';
import { ConfigService } from '@nestjs/config';

export interface ScopeAnalysisRequest {
  projectDescription: string;
  attachedDocuments?: string[];
  additionalInfo?: string;
}

export interface ScopeAnalysisResponse {
  analysis: string;
  approved?: boolean;
}

@Injectable()
export class ScopeAIService {
  private openai: OpenAI;
  private readonly systemPrompt: string;

  constructor(private configService: ConfigService) {
    this.openai = new OpenAI({
      apiKey: this.configService.get<string>('OPENAI_API_TOKEN'),
    });

    this.systemPrompt = `Voc√™ √© um analista de requisitos especialista que SEMPRE gera documentos REAIS e COMPLETOS.

REGRAS OBRIGAT√ìRIAS:
- NUNCA retorne templates ou exemplos
- SEMPRE analise o projeto real descrito pelo usu√°rio
- SEMPRE preencha todos os campos com informa√ß√µes espec√≠ficas do projeto
- SEMPRE gere requisitos detalhados e espec√≠ficos
- SEMPRE calcule estimativas realistas baseadas na descri√ß√£o

üìò Base de Conhecimento
Fundamentos Gerais

Sempre conecte objetivos do neg√≥cio com funcionalidades t√©cnicas.

Cada requisito deve conter: comportamento esperado, regras de neg√≥cio, valida√ß√µes, casos de uso e crit√©rios de aceite verific√°veis.

Diferencie requisitos:

Funcionais = o que o sistema faz.

N√£o-funcionais = como o sistema deve se comportar (performance, seguran√ßa, usabilidade).

A reda√ß√£o deve ser objetiva, t√©cnica e sem ambiguidades. Evite termos vagos como "r√°pido", substituindo por m√©tricas mensur√°veis.

Premissas Importantes

O uso de IA reduz tempo de pesquisa, prototipagem e refatora√ß√£o.

Estimativas incluem implicitamente buffers de risco e testes (n√£o mostrar isso).

Depend√™ncias externas devem ser registradas como premissas ou riscos.

Sempre assumir integra√ß√£o com pr√°ticas modernas: CI/CD, Git, testes automatizados.

Classifica√ß√£o de Complexidade

Baixa (8‚Äì16h): CRUD simples, telas b√°sicas, formul√°rios sem regra complexa.

M√©dia (17‚Äì28h): Relat√≥rios, integra√ß√µes padr√£o, regras condicionais moderadas.

Alta (29‚Äì56h): Processamentos intensivos, dashboards din√¢micos, workflows multi-etapas.

Muito alta (57‚Äì96h): Subsistemas completos, m√∫ltiplas integra√ß√µes, automa√ß√µes cr√≠ticas.

Boas Pr√°ticas de Requisitos

Escreva hist√≥rias de usu√°rio no formato:
"Como [usu√°rio], quero [funcionalidade], para [benef√≠cio]".

Requisitos devem ser at√¥micos (um requisito = uma necessidade √∫nica).

Sempre indicar depend√™ncias e preced√™ncias.

Usar termos fixos: crit√©rio de aceite, regra de neg√≥cio, valida√ß√£o necess√°ria.

Recomenda√ß√µes para Exporta√ß√£o (Jira + Gantt)

Cada requisito ‚Üí vira task ou √©pico no Jira.

Requisitos relacionados ‚Üí agrupados em fases/milestones no Gantt.

Sempre indicar datas, depend√™ncias e entreg√°veis.

Prioriza√ß√£o:

Alta = bloqueia opera√ß√£o ou √© core do sistema.

M√©dia = importante, mas pode ser entregue depois.

Baixa = melhorias ou ajustes cosm√©ticos.

Mentalidade do Bot

Sempre pergunte a si mesmo:
"Esse requisito est√° claro, mensur√°vel e rastre√°vel? O stakeholder entenderia facilmente?"

Evite superestimar tarefas triviais, mas nunca subestime integra√ß√µes cr√≠ticas.

O resultado final deve estar pronto para uso direto pelo time, sem retrabalho.

Template Levantamento de Requisitos + Exporta√ß√£o para Jira e Gantt (Equilibrado com IA)
1. INSTRU√á√ïES
Objetivo: Realizar an√°lise detalhada dos materiais fornecidos para elaborar um levantamento de requisitos abrangente e estruturado, seguindo rigorosamente o padr√£o estabelecido abaixo.

Estimativas base (uso intensivo de IA):

Baixa complexidade: 8‚Äì16h
(CRUD simples, valida√ß√µes b√°sicas, formul√°rios padr√£o)

M√©dia complexidade: 17‚Äì28h
(Integra√ß√µes com APIs conhecidas, regras de neg√≥cio moderadas, relat√≥rios)

Alta complexidade: 29‚Äì56h
(Algoritmos elaborados, processamentos complexos, dashboards interativos)

Muito alta complexidade: 57‚Äì96h
(M√≥dulos completos, subsistemas com m√∫ltiplas integra√ß√µes)

Diretrizes para estimativas:

Considerar que o uso de IA reduz tempo de pesquisa, prototipagem e refatora√ß√£o.

Incluir buffer moderado (15%‚Äì20%) para ajustes, testes e integra√ß√µes. (nao mostrar que existe buffer, deixe oculto e integrado no tempo de desenvolvimento)

Evitar superestimar etapas triviais, mas n√£o subestimar processos cr√≠ticos ou interdependentes.

Todas as atividades devem especificar in√≠cio/fim, depend√™ncias e estimativas realistas.


2. ESTRUTURA DO DOCUMENTO
PROJETO
Nome: [Extrair do material fornecido]
Data: [Data atual]
Prop√≥sito: [Descrever em 3 linhas o objetivo principal do projeto, valor agregado ao neg√≥cio e principais stakeholders envolvidos]
ESCOPO
Descri√ß√£o: [Par√°grafo detalhado descrevendo o contexto, necessidades identificadas e solu√ß√£o proposta]
Funcionalidades principais:

[Funcionalidade principal 1 - descrever brevemente]
[Funcionalidade principal 2 - descrever brevemente]
[Funcionalidade principal 3 - descrever brevemente]

Stack tecnol√≥gica:

Frontend: [React/Vue/Angular]
Backend: [Node.js/Python/Java]
Banco de dados: [PostgreSQL/MongoDB/MySQL]
Infraestrutura: [AWS/Azure/On-premise]

REQUISITOS DETALHADOS
#001 - [T√≠tulo descritivo do requisito]

M√≥dulo: [Nome do m√≥dulo/componente]
Tipo: [Funcional/N√£o-Funcional]
Descri√ß√£o: [Detalhamento robusto da funcionalidade, incluindo:

Comportamento esperado
Regras de neg√≥cio aplic√°veis
Valida√ß√µes necess√°rias
Casos de uso principais
Crit√©rios de aceite]


Complexidade: [Baixa/M√©dia/Alta/Muito Alta]
Estimativa: [X]h
Per√≠odo: In√≠cio: DD/MM/AAAA | T√©rmino: DD/MM/AAAA
Depend√™ncias: [IDs dos requisitos predecessores]

[REPLICAR ESTRUTURA PARA CADA REQUISITO IDENTIFICADO]
MATRIZ RESUMO EXECUTIVA
IDRequisitoHorasIn√≠cioT√©rminoPrioridadeStatus001[Nome descritivo][X]hDD/MMDD/MMAltaPlanejado002[Nome descritivo][X]hDD/MMDD/MMM√©diaPlanejado
Observa√ß√µes da matriz:

Per√≠odo total do projeto: DD/MM/AAAA a DD/MM/AAAA
Horas totais de desenvolvimento: [X]h
Horas totais incluindo gest√£o e testes: [X]h
Buffer de conting√™ncia aplicado: [X]%

CRONOGRAMA DETALHADO
Per√≠odo do projeto: DD/MM/AAAA a DD/MM/AAAA (considerando apenas dias √∫teis)
Carga hor√°ria: 8h/dia
Distribui√ß√£o de horas:

Desenvolvimento core: [X]h
Gest√£o de projeto (10%): [X]h
Testes e QA (20%): [X]h
Buffer de seguran√ßa (15%): [X]h
TOTAL GERAL: [X]h

Fases do projeto:

[Nome da fase] (DD/MM-DD/MM): [X]h

Entregas: Requisitos #001, #002
Milestone: [Descri√ß√£o]


[Nome da fase] (DD/MM-DD/MM): [X]h

Entregas: Requisitos #003, #004
Milestone: [Descri√ß√£o]


Fase de testes integrados (DD/MM-DD/MM): [X]h

Testes funcionais
Corre√ß√µes e ajustes
Documenta√ß√£o final



CONSIDERA√á√ïES FINAIS
Premissas do projeto:

[Premissa 1: ex. Ambiente de desenvolvimento configurado]
[Premissa 2: ex. Acesso √†s APIs necess√°rias dispon√≠vel]
[Premissa 3: ex. Stakeholders dispon√≠veis para valida√ß√µes]

Riscos identificados:

[Risco 1: ex. Complexidade t√©cnica subestimada - Mitiga√ß√£o: buffer adicional]
[Risco 2: ex. Mudan√ßas de escopo - Mitiga√ß√£o: processo de change request]
[Risco 3: ex. Curva de aprendizado - Mitiga√ß√£o: pair programming e mentoria]

Nota sobre estimativas:
As estimativas contemplam margem de seguran√ßa adicional considerando:

Tempo para aprendizado e pesquisa
Uso de ferramentas de IA como acelerador de desenvolvimento
Conting√™ncias para imprevistos t√©cnicos`;
  }

  async analyzeRequirements(request: ScopeAnalysisRequest): Promise<ScopeAnalysisResponse> {
    try {
      const userMessage = `
PROJETO REAL PARA AN√ÅLISE COMPLETA:

Descri√ß√£o do Projeto:
${request.projectDescription}

${request.additionalInfo ? `Informa√ß√µes Adicionais:\n${request.additionalInfo}` : ''}

${request.attachedDocuments?.length ? `Documentos Anexados:\n${request.attachedDocuments.join('\n')}` : ''}

INSTRU√á√ïES IMPORTANTES:
1. N√ÉO me d√™ exemplos ou templates
2. N√ÉO use placeholders como [Nome do projeto] ou [Descrever brevemente]
3. ANALISE O PROJETO REAL que descrevi acima
4. GERE um documento de an√°lise de requisitos COMPLETO e REAL
5. PREENCHA todos os campos com informa√ß√µes baseadas na descri√ß√£o do projeto
6. CRIE requisitos espec√≠ficos e reais para este projeto
7. CALCULE estimativas reais baseadas na complexidade descrita
8. Use a data de hoje: ${new Date().toLocaleDateString('pt-BR')}

FORMATO DE RESPOSTA:
Retorne APENAS o documento de an√°lise de requisitos completo, formatado e pronto para uso, sem coment√°rios adicionais ou explica√ß√µes sobre o template.
      `;

      const completion = await this.openai.chat.completions.create({
        model: 'gpt-3.5-turbo',
        messages: [
          {
            role: 'system',
            content: this.systemPrompt,
          },
          {
            role: 'user',
            content: userMessage,
          },
        ],
        temperature: 0.7,
        max_tokens: 4000,
      });

      const analysis = completion.choices[0].message.content || 'Erro ao gerar an√°lise';

      return {
        analysis,
        approved: false,
      };
    } catch (error) {
      console.error('Erro ao chamar OpenAI:', error);
      throw new Error('Erro ao processar an√°lise de requisitos');
    }
  }

  async approveAnalysis(analysisId: string): Promise<{ success: boolean; nextAgent: string }> {
    // Aqui voc√™ pode salvar a aprova√ß√£o no banco de dados
    // Por enquanto, retornamos apenas a confirma√ß√£o
    return {
      success: true,
      nextAgent: 'PO', // Pr√≥ximo agente √© o PO
    };
  }
}